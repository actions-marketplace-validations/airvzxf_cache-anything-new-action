name: 'Cache Anything New'
author: 'Israel Roldan <israel.alberto.rv@gmail.com>'
description: >-
  Catch a series of commands then it will check for the new files generated and it should cache those.
inputs:
  id:
    description: 'Unique alias to identify this cache.'
    required: false
    default: 'cache-anything-new'
  version:
    description: 'The version is an easy way to create a new cache or come back to a previous.'
    required: false
    default: 'v1.0'
  directory:
    description: 'Path of the directory, recommended the main path (/).'
    required: false
    default: '/'
  exclude:
    description: 'Exclude directories and files from the indexation. Separate with spaces ( ).'
    required: false
    default: '/boot /data /dev /mnt /proc /run /sys'
runs:
  using: 'composite'
  steps:
    - run: |
        set +xv

        echo "GITHUB_ACTION_PATH:  ${GITHUB_ACTION_PATH}"
        echo "inputs.id:           ${{ inputs.id }}"
        echo "inputs.version:      ${{ inputs.version }}"
        echo "inputs.directory:    ${{ inputs.directory }}"
        echo "inputs.exclude:      ${{ inputs.exclude }}"

        FIND_INIT="sudo find"
        FIND_INIT="${FIND_INIT} ${{ inputs.directory }}"
        FIND_INIT="${FIND_INIT} -type f,l"
        EXCLUDED=( ${{ inputs.exclude }} )
        FIND_EXCLUDE=""
        for EXCLUDE in ${EXCLUDED[*]}
        do
          echo "EXCLUDE: ${EXCLUDE}"
          FIND_EXCLUDE="${FIND_EXCLUDE} -not \( -path \"${EXCLUDE}*\" -prune \)"
        done
        FIND_END="> ${{ runner.temp }}/system_files_snapshot_01.txt"
        FIND_END="${FIND_END} 2> /dev/null || true"

        FIND="${FIND_INIT}${FIND_EXCLUDE}${FIND_END}"
        echo "FIND: ${FIND}"
        eval ${FIND}

        ls -lha ${{ runner.temp }}/system_files_snapshot_01.txt

        #sudo find / -type f,l > ${{ runner.temp }}/system_files.txt 2> /dev/null || true
      shell: bash
branding:
  color: 'orange'
  icon: 'archive'
